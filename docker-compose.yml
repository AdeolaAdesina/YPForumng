version: '2'

volumes:
  postgres_data: {}
  postgres_backup: {}
  lets_encrypt_dev: {}
  staticfiles: {}
  mediafiles: {}

services:
  # postgres:
  #   build: ./compose/postgres
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - postgres_backup:/backups
  #   env_file: ./new.env
  #   ports:
  #     - "5433:5432"
    

  # postgres_slave:
  #   build: ./compose/postgres
  #   links:
  #     - postgres:master
  #   env_file: ./new.env
   
  django:
    build:
      context: .
      dockerfile: ./Dockerfile
    # user: django
    # depends_on:
      # - postgres
      # - redis
    volumes:
      - mediafiles:/var/ypgforum
      - staticfiles:/var/ypgforum_static
    # command: /gunicorn.sh
    command: python manage.py runserver 0.0.0.0:5000
    env_file: ./.env


  django-server:
    restart: always
    container_name: ypgforum
    build:
      context: ./compose/nginx
      dockerfile: Dockerfile
    depends_on:
      - django
    volumes:
      - staticfiles:/var/ypgforum_static
      - mediafiles:/var/ypgforum
    environment:
      - VIRTUAL_HOST=ypgforum.com
      - VIRTUAL_NETWORK=nginx-proxy
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=ypgforum.com
      - LETSENCRYPT_EMAIL=adeolaadesina@gmail.com

  letsencrypt-nginx-proxy-companion:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    volumes_from:
      - nginx
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "lets_encrypt_dev:/etc/nginx/certs:rw"
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen

  nginx-gen:
    restart: always
    image: registry.gitlab.com/tuteria/tuteria-deploy/nginx-gen
    container_name: nginx-gen
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
    volumes_from:
      - nginx
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf


  nginx:
    restart: always
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/conf.d"
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "lets_encrypt_dev:/etc/nginx/certs:ro"

  redis:
    image: redis:alpine
    restart: always
